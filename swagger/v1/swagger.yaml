---
openapi: 3.0.1
info:
  title: Aljam3 API
  version: v1
paths:
  "/api/v1/authors":
    get:
      summary: List authors
      tags:
      - Authors
      parameters:
      - name: q
        in: query
        required: false
        description: Search query
        schema:
          type: string
      - name: limit
        in: query
        required: false
        description: Limit the number of authors to return
        schema:
          type: integer
          default: 20
          minimum: 1
          maximum: 1000
      - name: page
        in: query
        required: false
        description: Page number to be returned
        schema:
          type: integer
          default: 1
          minimum: 1
      responses:
        '200':
          description: authors found
          content:
            application/json:
              schema:
                type: object
                properties:
                  pagination:
                    "$ref": "#/components/schemas/pagination"
                  authors:
                    type: array
                    items:
                      "$ref": "#/components/schemas/author"
                required:
                - pagination
                - authors
  "/api/v1/authors/{id}":
    get:
      summary: Get an author
      tags:
      - Authors
      parameters:
      - name: id
        in: path
        required: true
        description: Author ID
        schema:
          type: integer
      - name: q
        in: query
        required: false
        description: Search query
        schema:
          type: string
      - name: limit
        in: query
        required: false
        description: Limit the number of author's books to return
        schema:
          type: integer
          default: 20
          minimum: 1
          maximum: 1000
      - name: page
        in: query
        required: false
        description: Page number to be returned
        schema:
          type: integer
          default: 1
          minimum: 1
      - name: expand[]
        in: query
        required: false
        style: form
        explode: true
        description: What resources to expand in the response
        schema:
          type: array
          items:
            type: string
            enum:
            - books
      responses:
        '200':
          description: author found
          content:
            application/json:
              schema:
                allOf:
                - "$ref": "#/components/schemas/author"
                - type: object
                  properties:
                    pagination:
                      "$ref": "#/components/schemas/pagination"
                    books:
                      type: array
                      items:
                        "$ref": "#/components/schemas/book"
        '404':
          description: author not found
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/not_found"
  "/api/v1/books":
    get:
      summary: List books
      tags:
      - Books
      parameters:
      - name: q
        in: query
        required: false
        description: Search query
        schema:
          type: string
      - name: limit
        in: query
        required: false
        description: Limit the number of books to return
        schema:
          type: integer
          default: 20
          minimum: 1
          maximum: 1000
      - name: page
        in: query
        required: false
        description: Page number to be returned
        schema:
          type: integer
          default: 1
          minimum: 1
      responses:
        '200':
          description: books found
          content:
            application/json:
              schema:
                type: object
                properties:
                  pagination:
                    "$ref": "#/components/schemas/pagination"
                  books:
                    type: array
                    items:
                      "$ref": "#/components/schemas/book"
                required:
                - pagination
                - books
  "/api/v1/books/{id}":
    get:
      summary: Get a book
      tags:
      - Books
      parameters:
      - name: id
        in: path
        required: true
        description: Book ID
        schema:
          type: integer
      responses:
        '200':
          description: book found
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/book"
        '404':
          description: book not found
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/not_found"
  "/api/v1/categories":
    get:
      summary: List categories
      tags:
      - Categories
      responses:
        '200':
          description: categories found
          content:
            application/json:
              schema:
                type: object
                properties:
                  categories:
                    type: array
                    items:
                      "$ref": "#/components/schemas/category"
                required:
                - categories
  "/api/v1/categories/{id}":
    get:
      summary: Get a category
      tags:
      - Categories
      parameters:
      - name: id
        in: path
        required: true
        description: Category ID
        schema:
          type: integer
      - name: q
        in: query
        required: false
        description: Search query
        schema:
          type: string
      - name: limit
        in: query
        required: false
        description: Limit the number of category's books to return
        schema:
          type: integer
          default: 20
          minimum: 1
          maximum: 1000
      - name: page
        in: query
        required: false
        description: Page number to be returned
        schema:
          type: integer
          default: 1
          minimum: 1
      - name: expand[]
        in: query
        required: false
        style: form
        explode: true
        description: What resources to expand in the response
        schema:
          type: array
          items:
            type: string
            enum:
            - books
      responses:
        '200':
          description: category found
          content:
            application/json:
              schema:
                allOf:
                - "$ref": "#/components/schemas/category"
                - type: object
                  properties:
                    pagination:
                      "$ref": "#/components/schemas/pagination"
                    books:
                      type: array
                      items:
                        "$ref": "#/components/schemas/book"
        '404':
          description: category not found
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/not_found"
  "/api/v1/books/{book_id}/files":
    get:
      summary: List a book's files
      tags:
      - Books
      parameters:
      - name: book_id
        in: path
        required: true
        description: Book ID
        schema:
          type: integer
      responses:
        '200':
          description: files found
          content:
            application/json:
              schema:
                type: object
                properties:
                  files:
                    type: array
                    items:
                      "$ref": "#/components/schemas/file"
                required:
                - files
  "/api/v1/books/{book_id}/files/{id}":
    get:
      summary: Get a file
      tags:
      - Books
      parameters:
      - name: book_id
        in: path
        required: true
        description: Book ID
        schema:
          type: integer
      - name: id
        in: path
        required: true
        description: File ID
        schema:
          type: integer
      - name: limit
        in: query
        required: false
        description: Limit the number of file's pages to return
        schema:
          type: integer
          default: 20
          minimum: 1
          maximum: 1000
      - name: page
        in: query
        required: false
        description: Page number to be returned
        schema:
          type: integer
          default: 1
          minimum: 1
      - name: expand[]
        in: query
        required: false
        style: form
        explode: true
        description: What resources to expand in the response
        schema:
          type: array
          items:
            type: string
            enum:
            - pages
      responses:
        '200':
          description: file found
          content:
            application/json:
              schema:
                allOf:
                - "$ref": "#/components/schemas/file"
                - type: object
                  properties:
                    pagination:
                      "$ref": "#/components/schemas/pagination"
                    pages:
                      type: array
                      items:
                        "$ref": "#/components/schemas/page"
        '404':
          description: file not found
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/not_found"
  "/api/v1/libraries":
    get:
      summary: List libraries
      tags:
      - Libraries
      responses:
        '200':
          description: libraries found
          content:
            application/json:
              schema:
                type: object
                properties:
                  libraries:
                    type: array
                    items:
                      "$ref": "#/components/schemas/library"
                required:
                - libraries
  "/api/v1/libraries/{id}":
    get:
      summary: Get a library
      tags:
      - Libraries
      parameters:
      - name: id
        in: path
        required: true
        description: Library ID
        schema:
          type: integer
      - name: q
        in: query
        required: false
        description: Search query
        schema:
          type: string
      - name: limit
        in: query
        required: false
        description: Limit the number of library's books to return
        schema:
          type: integer
          default: 20
          minimum: 1
          maximum: 1000
      - name: page
        in: query
        required: false
        description: Page number to be returned
        schema:
          type: integer
          default: 1
          minimum: 1
      - name: expand[]
        in: query
        required: false
        style: form
        explode: true
        description: What resources to expand in the response
        schema:
          type: array
          items:
            type: string
            enum:
            - books
      responses:
        '200':
          description: library found
          content:
            application/json:
              schema:
                allOf:
                - "$ref": "#/components/schemas/library"
                - type: object
                  properties:
                    pagination:
                      "$ref": "#/components/schemas/pagination"
                    books:
                      type: array
                      items:
                        "$ref": "#/components/schemas/book"
        '404':
          description: library not found
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/not_found"
  "/api/v1/search":
    get:
      summary: Search pages across all books
      tags:
      - Search
      parameters:
      - name: q
        in: query
        required: true
        description: Search query
        schema:
          type: string
      - name: library
        in: query
        required: false
        description: Filter by library ID
        schema:
          type: integer
      - name: books[]
        in: query
        required: false
        style: form
        explode: true
        description: Filter by book IDs
        schema:
          type: array
          items:
            type: integer
      - name: authors[]
        in: query
        required: false
        style: form
        explode: true
        description: Filter by author IDs
        schema:
          type: array
          items:
            type: integer
      - name: categories[]
        in: query
        required: false
        style: form
        explode: true
        description: Filter by category IDs
        schema:
          type: array
          items:
            type: integer
      - name: limit
        in: query
        required: false
        description: Limit the number of pages to return
        schema:
          type: integer
          default: 20
          minimum: 1
          maximum: 1000
      - name: page
        in: query
        required: false
        description: Page number to be returned
        schema:
          type: integer
          default: 1
          minimum: 1
      responses:
        '200':
          description: search results found
          content:
            application/json:
              schema:
                type: object
                properties:
                  pagination:
                    "$ref": "#/components/schemas/pagination"
                  pages:
                    type: array
                    items:
                      "$ref": "#/components/schemas/page"
                required:
                - pagination
                - pages
servers:
- url: http://localhost:3000
- url: https://aljam3.com
components:
  schemas:
    pagination:
      type: object
      properties:
        from:
          type: integer
          description: First record on the page
        to:
          type: integer
          description: Last record on the page
        count:
          type: integer
          description: Total number of records
        current_page:
          type: integer
          description: Current page number
        total_pages:
          type: integer
          description: Total number of pages
        limit:
          type: integer
          description: Limit the number of books to return
        next_page:
          type: integer
          description: Next page number, null if no next page
          nullable: true
        next_page_link:
          type: string
          description: API link to the next page, null if no next page
          nullable: true
        previous_page:
          type: integer
          description: Previous page number, null if no previous page
          nullable: true
        previous_page_link:
          type: string
          description: API link to the previous page, null if no previous page
          nullable: true
      required:
      - from
      - to
      - count
      - current_page
      - total_pages
      - limit
      - next_page
      - next_page_link
      - previous_page
      - previous_page_link
    library:
      type: object
      properties:
        id:
          type: integer
          description: Library ID
        name:
          type: string
          description: Library name
        books_count:
          type: integer
          description: Number of books
        link:
          type: string
          description: API link to the library
      required:
      - id
      - name
      - books_count
      - link
    book:
      type: object
      properties:
        id:
          type: integer
          description: Book ID
        title:
          type: string
          description: Book title
        pages_count:
          type: integer
          description: Number of pages
        files_count:
          type: integer
          description: Number of files, -1 if not available
        views_count:
          type: integer
          description: Number of views
        volumes:
          type: integer
          description: Number of volumes
        author:
          "$ref": "#/components/schemas/author"
        category:
          "$ref": "#/components/schemas/category"
        library:
          "$ref": "#/components/schemas/library"
        link:
          type: string
          description: API link to the book
      required:
      - id
      - title
      - pages_count
      - files_count
      - views_count
      - volumes
      - link
    author:
      type: object
      properties:
        id:
          type: integer
          description: Author ID
        name:
          type: string
          description: Author name
        books_count:
          type: integer
          description: Number of books
        link:
          type: string
          description: API link to the author
      required:
      - id
      - name
      - books_count
      - link
    category:
      type: object
      properties:
        id:
          type: integer
          description: Category ID
        name:
          type: string
          description: Category name
        books_count:
          type: integer
          description: Number of books
        link:
          type: string
          description: API link to the category
      required:
      - id
      - name
      - books_count
      - link
    file:
      type: object
      properties:
        id:
          type: integer
          description: File ID
        name:
          type: string
          description: File name
        pages_count:
          type: integer
          description: Number of pages
        urls:
          type: object
          properties:
            pdf:
              type: string
              description: PDF URL
            docx:
              type: string
              description: DOCX URL
            txt:
              type: string
              description: TXT URL
          required:
          - pdf
          - docx
          - txt
        link:
          type: string
          description: API link to the file
      required:
      - id
      - name
      - pages_count
      - urls
      - link
    page:
      type: object
      properties:
        id:
          type: integer
          description: Page ID
        content:
          type: string
          description: Page content
        number:
          type: integer
          description: Page number
      required:
      - id
      - content
      - number
    not_found:
      type: object
      properties:
        error:
          type: string
          description: Error message
      required:
      - error
