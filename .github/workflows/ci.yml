name: CI

on:
  pull_request:
    paths-ignore:
      - '**/*.md'
      - '.github/**'
      - '.stimulus-lsp'
      - '.kamal/**'
      - '.vscode/**'
  push:
    branches: [ main ]
    paths-ignore:
      - '**/*.md'
      - '.github/**'
      - '.stimulus-lsp'
      - '.kamal/**'
      - '.vscode/**'

jobs:
  scan_ruby:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v5

      - name: Set up Ruby
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: 3.4.4
          bundler-cache: true

      - name: Scan for common Rails security vulnerabilities using static analysis
        run: bin/brakeman --no-pager

  lint:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v5

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 24.1.0
          cache: "yarn"

      - name: Set up Ruby
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: 3.4.4
          bundler-cache: true

      - name: Install JS dependencies
        run: yarn install

      - name: Run Rubocop
        run: bin/rubocop -f github

      - name: Run Prettier
        run: npx prettier ./app/javascript/ --check

  i18n-tasks:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v5

      - name: Set up Ruby
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: 3.4.4
          bundler-cache: true

      - name: Run i18n-tasks check
        run: bin/i18n-tasks health

  active_record_doctor:
    runs-on: ubuntu-latest
    needs: [scan_ruby, i18n-tasks, lint]

    services:
      postgres:
        image: postgres:17.5
        ports:
          - "5433:5432"
        env:
          POSTGRES_USER: aljam3
          POSTGRES_PASSWORD: aljam3
          POSTGRES_DB: aljam3_development
        options: --health-cmd pg_isready --health-interval 10s --health-timeout 5s --health-retries 5

    steps:
      - name: Checkout code
        uses: actions/checkout@v5

      - name: Install libpq-dev
        run: sudo apt-get -yqq install libpq-dev

      - name: Set up Ruby
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: 3.4.4
          bundler-cache: true

      - name: Create database
        run: bin/rails db:create

      - name: Run database migrations
        run: bin/rails db:migrate

      - name: Run Active Record Doctor
        run: bundle exec rake active_record_doctor

  test:
    runs-on: ubuntu-latest
    needs: [scan_ruby, i18n-tasks, lint]

    services:
      postgres:
        image: postgres:17.5
        ports:
          - "5433:5432"
        env:
          POSTGRES_USER: aljam3
          POSTGRES_PASSWORD: aljam3
          POSTGRES_DB: aljam3_test
        options: --health-cmd pg_isready --health-interval 10s --health-timeout 5s --health-retries 5

      meilisearch:
        image: getmeili/meilisearch:v1.14.0
        ports:
          - "7701:7700"

      redis:
        image: valkey/valkey:8.1
        ports:
          - "6380:6379"

    env:
      RAILS_MASTER_KEY: ${{ secrets.RAILS_MASTER_KEY }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v5

      - name: Install libpq-dev
        run: sudo apt-get -yqq install libpq-dev

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 24.1.0
          cache: "yarn"

      - name: Set up Ruby
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: 3.4.4
          bundler-cache: true

      - name: Install JS dependencies
        run: yarn install

      - name: Build JS/CSS assets
        run: |
          yarn build
          yarn run build:css

      - name: Create database
        run: bin/rails db:create

      - name: Run database migrations
        run: bin/rails db:migrate

      - name: Run tests
        run: bin/rspec

      - uses: joshmfrankel/simplecov-check-action@main
        if: ${{ github.event.pull_request.head.repo.full_name == github.repository || github.event_name == 'push' }}
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          minimum_suite_coverage: 100
          minimum_file_coverage: 100
